{"remainingRequest":"/opt/mygitblog/XiaoDongZhi.github.io/node_modules/babel-loader/lib/index.js??ref--3-1!/opt/mygitblog/XiaoDongZhi.github.io/node_modules/@vuepress/core/lib/client/app.js","dependencies":[{"path":"/opt/mygitblog/XiaoDongZhi.github.io/node_modules/@vuepress/core/lib/client/app.js","mtime":1604132492005},{"path":"/opt/mygitblog/XiaoDongZhi.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1604132492265},{"path":"/opt/mygitblog/XiaoDongZhi.github.io/node_modules/babel-loader/lib/index.js","mtime":1604132492237}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9vcHQvbXlnaXRibG9nL1hpYW9Eb25nWmhpLmdpdGh1Yi5pby9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CgovKiBnbG9iYWwgVlVFUFJFU1NfVEVNUF9QQVRIICovCmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IFJvdXRlciBmcm9tICd2dWUtcm91dGVyJzsKaW1wb3J0IGRhdGFNaXhpbiBmcm9tICcuL2RhdGFNaXhpbic7CmltcG9ydCB7IHJvdXRlcyB9IGZyb20gJ0BpbnRlcm5hbC9yb3V0ZXMnOwppbXBvcnQgeyBzaXRlRGF0YSB9IGZyb20gJ0BpbnRlcm5hbC9zaXRlRGF0YSc7CmltcG9ydCBhcHBFbmhhbmNlcnMgZnJvbSAnQGludGVybmFsL2FwcC1lbmhhbmNlcnMnOwppbXBvcnQgZ2xvYmFsVUlDb21wb25lbnRzIGZyb20gJ0BpbnRlcm5hbC9nbG9iYWwtdWknOwppbXBvcnQgQ2xpZW50Q29tcHV0ZWRNaXhpbiBmcm9tICdAdHJhbnNmb3JtL0NsaWVudENvbXB1dGVkTWl4aW4nOwppbXBvcnQgVnVlUHJlc3MgZnJvbSAnLi9wbHVnaW5zL1Z1ZVByZXNzJzsKaW1wb3J0IHsgaGFuZGxlUmVkaXJlY3RGb3JDbGVhblVybHMgfSBmcm9tICcuL3JlZGlyZWN0LmpzJzsKaW1wb3J0IHsgZ2V0TGF5b3V0QXN5bmNDb21wb25lbnQgfSBmcm9tICcuL3V0aWwnOyAvLyBidWlsdC1pbiBjb21wb25lbnRzCgppbXBvcnQgQ29udGVudCBmcm9tICcuL2NvbXBvbmVudHMvQ29udGVudC5qcyc7CmltcG9ydCBDb250ZW50U2xvdHNEaXN0cmlidXRvciBmcm9tICcuL2NvbXBvbmVudHMvQ29udGVudFNsb3RzRGlzdHJpYnV0b3InOwppbXBvcnQgT3V0Ym91bmRMaW5rIGZyb20gJy4vY29tcG9uZW50cy9PdXRib3VuZExpbmsudnVlJzsKaW1wb3J0IENsaWVudE9ubHkgZnJvbSAnLi9jb21wb25lbnRzL0NsaWVudE9ubHknOyAvLyBzdWdnZXN0IGRldiBzZXJ2ZXIgcmVzdGFydCBvbiBiYXNlIGNoYW5nZQoKaWYgKG1vZHVsZS5ob3QpIHsKICB2YXIgcHJldkJhc2UgPSBzaXRlRGF0YS5iYXNlOwogIG1vZHVsZS5ob3QuYWNjZXB0KFZVRVBSRVNTX1RFTVBfUEFUSCArICcvaW50ZXJuYWwvc2l0ZURhdGEuanMnLCBmdW5jdGlvbiAoKSB7CiAgICBpZiAoc2l0ZURhdGEuYmFzZSAhPT0gcHJldkJhc2UpIHsKICAgICAgd2luZG93LmFsZXJ0KCJbdnVlcHJlc3NdIFNpdGUgYmFzZSBoYXMgY2hhbmdlZC4gIiArICJQbGVhc2UgcmVzdGFydCBkZXYgc2VydmVyIHRvIGVuc3VyZSBjb3JyZWN0IGFzc2V0IHBhdGhzLiIpOwogICAgfQogIH0pOwp9CgpWdWUuY29uZmlnLnByb2R1Y3Rpb25UaXAgPSBmYWxzZTsKVnVlLnVzZShSb3V0ZXIpOwpWdWUudXNlKFZ1ZVByZXNzKTsgLy8gbWl4aW4gZm9yIGV4cG9zaW5nICRzaXRlIGFuZCAkcGFnZQoKVnVlLm1peGluKGRhdGFNaXhpbihDbGllbnRDb21wdXRlZE1peGluLCBzaXRlRGF0YSkpOyAvLyBjb21wb25lbnQgZm9yIHJlbmRlcmluZyBtYXJrZG93biBjb250ZW50IGFuZCBzZXR0aW5nIHRpdGxlIGV0Yy4KCi8qIGVzbGludC1kaXNhYmxlIHZ1ZS9tYXRjaC1jb21wb25lbnQtZmlsZS1uYW1lICovCgpWdWUuY29tcG9uZW50KCdDb250ZW50JywgQ29udGVudCk7ClZ1ZS5jb21wb25lbnQoJ0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yJywgQ29udGVudFNsb3RzRGlzdHJpYnV0b3IpOwpWdWUuY29tcG9uZW50KCdPdXRib3VuZExpbmsnLCBPdXRib3VuZExpbmspOyAvLyBjb21wb25lbnQgZm9yIGNsaWVudC1vbmx5IGNvbnRlbnQKClZ1ZS5jb21wb25lbnQoJ0NsaWVudE9ubHknLCBDbGllbnRPbmx5KTsgLy8gY29yZSBjb21wb25lbnRzCgpWdWUuY29tcG9uZW50KCdMYXlvdXQnLCBnZXRMYXlvdXRBc3luY0NvbXBvbmVudCgnTGF5b3V0JykpOwpWdWUuY29tcG9uZW50KCdOb3RGb3VuZCcsIGdldExheW91dEFzeW5jQ29tcG9uZW50KCdOb3RGb3VuZCcpKTsKLyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHZ1ZS9tYXRjaC1jb21wb25lbnQtZmlsZS1uYW1lICovCi8vIGdsb2JhbCBoZWxwZXIgZm9yIGFkZGluZyBiYXNlIHBhdGggdG8gYWJzb2x1dGUgdXJscwoKVnVlLnByb3RvdHlwZS4kd2l0aEJhc2UgPSBmdW5jdGlvbiAocGF0aCkgewogIHZhciBiYXNlID0gdGhpcy4kc2l0ZS5iYXNlOwoKICBpZiAocGF0aC5jaGFyQXQoMCkgPT09ICcvJykgewogICAgcmV0dXJuIGJhc2UgKyBwYXRoLnNsaWNlKDEpOwogIH0gZWxzZSB7CiAgICByZXR1cm4gcGF0aDsKICB9Cn07CgpleHBvcnQgZnVuY3Rpb24gY3JlYXRlQXBwKF94KSB7CiAgcmV0dXJuIF9jcmVhdGVBcHAuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX2NyZWF0ZUFwcCgpIHsKICBfY3JlYXRlQXBwID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGlzU2VydmVyKSB7CiAgICB2YXIgcm91dGVyQmFzZSwgcm91dGVyLCBvcHRpb25zLCBhcHA7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHJvdXRlckJhc2UgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuX19WVUVQUkVTU19ST1VURVJfQkFTRV9fID8gd2luZG93Ll9fVlVFUFJFU1NfUk9VVEVSX0JBU0VfXyA6IHNpdGVEYXRhLnJvdXRlckJhc2UgfHwgc2l0ZURhdGEuYmFzZTsKICAgICAgICAgICAgcm91dGVyID0gbmV3IFJvdXRlcih7CiAgICAgICAgICAgICAgYmFzZTogcm91dGVyQmFzZSwKICAgICAgICAgICAgICBtb2RlOiAnaGlzdG9yeScsCiAgICAgICAgICAgICAgZmFsbGJhY2s6IGZhbHNlLAogICAgICAgICAgICAgIHJvdXRlczogcm91dGVzLAogICAgICAgICAgICAgIHNjcm9sbEJlaGF2aW9yOiBmdW5jdGlvbiBzY3JvbGxCZWhhdmlvcih0bywgZnJvbSwgc2F2ZWRQb3NpdGlvbikgewogICAgICAgICAgICAgICAgaWYgKHNhdmVkUG9zaXRpb24pIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHNhdmVkUG9zaXRpb247CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRvLmhhc2gpIHsKICAgICAgICAgICAgICAgICAgaWYgKFZ1ZS4kdnVlcHJlc3MuJGdldCgnZGlzYWJsZVNjcm9sbEJlaGF2aW9yJykpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6IHRvLmhhc2gKICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgeDogMCwKICAgICAgICAgICAgICAgICAgICB5OiAwCiAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgaGFuZGxlUmVkaXJlY3RGb3JDbGVhblVybHMocm91dGVyKTsKICAgICAgICAgICAgb3B0aW9ucyA9IHt9OwogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNDsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChhcHBFbmhhbmNlcnMuZmlsdGVyKGZ1bmN0aW9uIChlbmhhbmNlcikgewogICAgICAgICAgICAgIHJldHVybiB0eXBlb2YgZW5oYW5jZXIgPT09ICdmdW5jdGlvbic7CiAgICAgICAgICAgIH0pLm1hcChmdW5jdGlvbiAoZW5oYW5jZXIpIHsKICAgICAgICAgICAgICByZXR1cm4gZW5oYW5jZXIoewogICAgICAgICAgICAgICAgVnVlOiBWdWUsCiAgICAgICAgICAgICAgICBvcHRpb25zOiBvcHRpb25zLAogICAgICAgICAgICAgICAgcm91dGVyOiByb3V0ZXIsCiAgICAgICAgICAgICAgICBzaXRlRGF0YTogc2l0ZURhdGEsCiAgICAgICAgICAgICAgICBpc1NlcnZlcjogaXNTZXJ2ZXIKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSkpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA5OwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDQpOwogICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICBhcHAgPSBuZXcgVnVlKE9iamVjdC5hc3NpZ24ob3B0aW9ucywgewogICAgICAgICAgICAgIHJvdXRlcjogcm91dGVyLAogICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHsKICAgICAgICAgICAgICAgIHJldHVybiBoKCdkaXYnLCB7CiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgaWQ6ICdhcHAnCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sIFtoKCdSb3V0ZXJWaWV3JywgewogICAgICAgICAgICAgICAgICByZWY6ICdsYXlvdXQnCiAgICAgICAgICAgICAgICB9KSwgaCgnZGl2JywgewogICAgICAgICAgICAgICAgICAiY2xhc3MiOiAnZ2xvYmFsLXVpJwogICAgICAgICAgICAgICAgfSwgZ2xvYmFsVUlDb21wb25lbnRzLm1hcChmdW5jdGlvbiAoY29tcG9uZW50KSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBoKGNvbXBvbmVudCk7CiAgICAgICAgICAgICAgICB9KSldKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgewogICAgICAgICAgICAgIGFwcDogYXBwLAogICAgICAgICAgICAgIHJvdXRlcjogcm91dGVyCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSwgbnVsbCwgW1s0LCA5XV0pOwogIH0pKTsKICByZXR1cm4gX2NyZWF0ZUFwcC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9"},null]}