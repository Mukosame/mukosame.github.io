{"remainingRequest":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/babel-loader/lib/index.js??ref--3-1!/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/core-js/modules/es.regexp.to-string.js","dependencies":[{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/core-js/modules/es.regexp.to-string.js","mtime":1603041181476},{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/cache-loader/dist/cjs.js","mtime":1603041438982},{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/babel-loader/lib/index.js","mtime":1603041438713}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKdmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZGVmaW5lJyk7Cgp2YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7Cgp2YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTsKCnZhciBmbGFncyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWdleHAtZmxhZ3MnKTsKCnZhciBUT19TVFJJTkcgPSAndG9TdHJpbmcnOwp2YXIgUmVnRXhwUHJvdG90eXBlID0gUmVnRXhwLnByb3RvdHlwZTsKdmFyIG5hdGl2ZVRvU3RyaW5nID0gUmVnRXhwUHJvdG90eXBlW1RPX1NUUklOR107CnZhciBOT1RfR0VORVJJQyA9IGZhaWxzKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gbmF0aXZlVG9TdHJpbmcuY2FsbCh7CiAgICBzb3VyY2U6ICdhJywKICAgIGZsYWdzOiAnYicKICB9KSAhPSAnL2EvYic7Cn0pOyAvLyBGRjQ0LSBSZWdFeHAjdG9TdHJpbmcgaGFzIGEgd3JvbmcgbmFtZQoKdmFyIElOQ09SUkVDVF9OQU1FID0gbmF0aXZlVG9TdHJpbmcubmFtZSAhPSBUT19TVFJJTkc7IC8vIGBSZWdFeHAucHJvdG90eXBlLnRvU3RyaW5nYCBtZXRob2QKLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS50b3N0cmluZwoKaWYgKE5PVF9HRU5FUklDIHx8IElOQ09SUkVDVF9OQU1FKSB7CiAgcmVkZWZpbmUoUmVnRXhwLnByb3RvdHlwZSwgVE9fU1RSSU5HLCBmdW5jdGlvbiB0b1N0cmluZygpIHsKICAgIHZhciBSID0gYW5PYmplY3QodGhpcyk7CiAgICB2YXIgcCA9IFN0cmluZyhSLnNvdXJjZSk7CiAgICB2YXIgcmYgPSBSLmZsYWdzOwogICAgdmFyIGYgPSBTdHJpbmcocmYgPT09IHVuZGVmaW5lZCAmJiBSIGluc3RhbmNlb2YgUmVnRXhwICYmICEoJ2ZsYWdzJyBpbiBSZWdFeHBQcm90b3R5cGUpID8gZmxhZ3MuY2FsbChSKSA6IHJmKTsKICAgIHJldHVybiAnLycgKyBwICsgJy8nICsgZjsKICB9LCB7CiAgICB1bnNhZmU6IHRydWUKICB9KTsKfQ=="},{"version":3,"sources":["/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/core-js/modules/es.regexp.to-string.js"],"names":["redefine","require","anObject","fails","flags","TO_STRING","RegExpPrototype","RegExp","prototype","nativeToString","NOT_GENERIC","call","source","INCORRECT_NAME","name","toString","R","p","String","rf","f","undefined","unsafe"],"mappings":"AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,uBAAD,CAAtB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,oBAAD,CAAnB;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,2BAAD,CAAnB;;AAEA,IAAII,SAAS,GAAG,UAAhB;AACA,IAAIC,eAAe,GAAGC,MAAM,CAACC,SAA7B;AACA,IAAIC,cAAc,GAAGH,eAAe,CAACD,SAAD,CAApC;AAEA,IAAIK,WAAW,GAAGP,KAAK,CAAC,YAAY;AAAE,SAAOM,cAAc,CAACE,IAAf,CAAoB;AAAEC,IAAAA,MAAM,EAAE,GAAV;AAAeR,IAAAA,KAAK,EAAE;AAAtB,GAApB,KAAoD,MAA3D;AAAoE,CAAnF,CAAvB,C,CACA;;AACA,IAAIS,cAAc,GAAGJ,cAAc,CAACK,IAAf,IAAuBT,SAA5C,C,CAEA;AACA;;AACA,IAAIK,WAAW,IAAIG,cAAnB,EAAmC;AACjCb,EAAAA,QAAQ,CAACO,MAAM,CAACC,SAAR,EAAmBH,SAAnB,EAA8B,SAASU,QAAT,GAAoB;AACxD,QAAIC,CAAC,GAAGd,QAAQ,CAAC,IAAD,CAAhB;AACA,QAAIe,CAAC,GAAGC,MAAM,CAACF,CAAC,CAACJ,MAAH,CAAd;AACA,QAAIO,EAAE,GAAGH,CAAC,CAACZ,KAAX;AACA,QAAIgB,CAAC,GAAGF,MAAM,CAACC,EAAE,KAAKE,SAAP,IAAoBL,CAAC,YAAYT,MAAjC,IAA2C,EAAE,WAAWD,eAAb,CAA3C,GAA2EF,KAAK,CAACO,IAAN,CAAWK,CAAX,CAA3E,GAA2FG,EAA5F,CAAd;AACA,WAAO,MAAMF,CAAN,GAAU,GAAV,GAAgBG,CAAvB;AACD,GANO,EAML;AAAEE,IAAAA,MAAM,EAAE;AAAV,GANK,CAAR;AAOD","sourcesContent":["'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n"]}]}