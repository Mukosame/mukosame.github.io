{"remainingRequest":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/babel-loader/lib/index.js??ref--3-1!/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/core-js/modules/es.string.trim-end.js","dependencies":[{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/core-js/modules/es.string.trim-end.js","mtime":1603041181476},{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/cache-loader/dist/cjs.js","mtime":1603041438982},{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/babel-loader/lib/index.js","mtime":1603041438713}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKdmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7Cgp2YXIgJHRyaW1FbmQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc3RyaW5nLXRyaW0nKS5lbmQ7Cgp2YXIgZm9yY2VkU3RyaW5nVHJpbU1ldGhvZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zdHJpbmctdHJpbS1mb3JjZWQnKTsKCnZhciBGT1JDRUQgPSBmb3JjZWRTdHJpbmdUcmltTWV0aG9kKCd0cmltRW5kJyk7CnZhciB0cmltRW5kID0gRk9SQ0VEID8gZnVuY3Rpb24gdHJpbUVuZCgpIHsKICByZXR1cm4gJHRyaW1FbmQodGhpcyk7Cn0gOiAnJy50cmltRW5kOyAvLyBgU3RyaW5nLnByb3RvdHlwZS57IHRyaW1FbmQsIHRyaW1SaWdodCB9YCBtZXRob2RzCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L2VjbWFzY3JpcHQtc3RyaW5nLWxlZnQtcmlnaHQtdHJpbQoKJCh7CiAgdGFyZ2V0OiAnU3RyaW5nJywKICBwcm90bzogdHJ1ZSwKICBmb3JjZWQ6IEZPUkNFRAp9LCB7CiAgdHJpbUVuZDogdHJpbUVuZCwKICB0cmltUmlnaHQ6IHRyaW1FbmQKfSk7"},{"version":3,"sources":["/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/core-js/modules/es.string.trim-end.js"],"names":["$","require","$trimEnd","end","forcedStringTrimMethod","FORCED","trimEnd","target","proto","forced","trimRight"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,0BAAD,CAAP,CAAoCE,GAAnD;;AACA,IAAIC,sBAAsB,GAAGH,OAAO,CAAC,iCAAD,CAApC;;AAEA,IAAII,MAAM,GAAGD,sBAAsB,CAAC,SAAD,CAAnC;AAEA,IAAIE,OAAO,GAAGD,MAAM,GAAG,SAASC,OAAT,GAAmB;AACxC,SAAOJ,QAAQ,CAAC,IAAD,CAAf;AACD,CAFmB,GAEhB,GAAGI,OAFP,C,CAIA;AACA;;AACAN,CAAC,CAAC;AAAEO,EAAAA,MAAM,EAAE,QAAV;AAAoBC,EAAAA,KAAK,EAAE,IAA3B;AAAiCC,EAAAA,MAAM,EAAEJ;AAAzC,CAAD,EAAoD;AACnDC,EAAAA,OAAO,EAAEA,OAD0C;AAEnDI,EAAAA,SAAS,EAAEJ;AAFwC,CAApD,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $trimEnd = require('../internals/string-trim').end;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\nvar FORCED = forcedStringTrimMethod('trimEnd');\n\nvar trimEnd = FORCED ? function trimEnd() {\n  return $trimEnd(this);\n} : ''.trimEnd;\n\n// `String.prototype.{ trimEnd, trimRight }` methods\n// https://github.com/tc39/ecmascript-string-left-right-trim\n$({ target: 'String', proto: true, forced: FORCED }, {\n  trimEnd: trimEnd,\n  trimRight: trimEnd\n});\n"]}]}