{"remainingRequest":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/babel-loader/lib/index.js??ref--3-1!/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/core-js/internals/string-multibyte.js","dependencies":[{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/core-js/internals/string-multibyte.js","mtime":1603041181476},{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/cache-loader/dist/cjs.js","mtime":1603041438982},{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/babel-loader/lib/index.js","mtime":1603041438713}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbnRlZ2VyJyk7Cgp2YXIgcmVxdWlyZU9iamVjdENvZXJjaWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGUnKTsgLy8gYFN0cmluZy5wcm90b3R5cGUueyBjb2RlUG9pbnRBdCwgYXQgfWAgbWV0aG9kcyBpbXBsZW1lbnRhdGlvbgoKCnZhciBjcmVhdGVNZXRob2QgPSBmdW5jdGlvbiAoQ09OVkVSVF9UT19TVFJJTkcpIHsKICByZXR1cm4gZnVuY3Rpb24gKCR0aGlzLCBwb3MpIHsKICAgIHZhciBTID0gU3RyaW5nKHJlcXVpcmVPYmplY3RDb2VyY2libGUoJHRoaXMpKTsKICAgIHZhciBwb3NpdGlvbiA9IHRvSW50ZWdlcihwb3MpOwogICAgdmFyIHNpemUgPSBTLmxlbmd0aDsKICAgIHZhciBmaXJzdCwgc2Vjb25kOwogICAgaWYgKHBvc2l0aW9uIDwgMCB8fCBwb3NpdGlvbiA+PSBzaXplKSByZXR1cm4gQ09OVkVSVF9UT19TVFJJTkcgPyAnJyA6IHVuZGVmaW5lZDsKICAgIGZpcnN0ID0gUy5jaGFyQ29kZUF0KHBvc2l0aW9uKTsKICAgIHJldHVybiBmaXJzdCA8IDB4RDgwMCB8fCBmaXJzdCA+IDB4REJGRiB8fCBwb3NpdGlvbiArIDEgPT09IHNpemUgfHwgKHNlY29uZCA9IFMuY2hhckNvZGVBdChwb3NpdGlvbiArIDEpKSA8IDB4REMwMCB8fCBzZWNvbmQgPiAweERGRkYgPyBDT05WRVJUX1RPX1NUUklORyA/IFMuY2hhckF0KHBvc2l0aW9uKSA6IGZpcnN0IDogQ09OVkVSVF9UT19TVFJJTkcgPyBTLnNsaWNlKHBvc2l0aW9uLCBwb3NpdGlvbiArIDIpIDogKGZpcnN0IC0gMHhEODAwIDw8IDEwKSArIChzZWNvbmQgLSAweERDMDApICsgMHgxMDAwMDsKICB9Owp9OwoKbW9kdWxlLmV4cG9ydHMgPSB7CiAgLy8gYFN0cmluZy5wcm90b3R5cGUuY29kZVBvaW50QXRgIG1ldGhvZAogIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUuY29kZXBvaW50YXQKICBjb2RlQXQ6IGNyZWF0ZU1ldGhvZChmYWxzZSksCiAgLy8gYFN0cmluZy5wcm90b3R5cGUuYXRgIG1ldGhvZAogIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRoaWFzYnluZW5zL1N0cmluZy5wcm90b3R5cGUuYXQKICBjaGFyQXQ6IGNyZWF0ZU1ldGhvZCh0cnVlKQp9Ow=="},{"version":3,"sources":["/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/core-js/internals/string-multibyte.js"],"names":["toInteger","require","requireObjectCoercible","createMethod","CONVERT_TO_STRING","$this","pos","S","String","position","size","length","first","second","undefined","charCodeAt","charAt","slice","module","exports","codeAt"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,uCAAD,CAApC,C,CAEA;;;AACA,IAAIE,YAAY,GAAG,UAAUC,iBAAV,EAA6B;AAC9C,SAAO,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAC3B,QAAIC,CAAC,GAAGC,MAAM,CAACN,sBAAsB,CAACG,KAAD,CAAvB,CAAd;AACA,QAAII,QAAQ,GAAGT,SAAS,CAACM,GAAD,CAAxB;AACA,QAAII,IAAI,GAAGH,CAAC,CAACI,MAAb;AACA,QAAIC,KAAJ,EAAWC,MAAX;AACA,QAAIJ,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,IAAIC,IAAhC,EAAsC,OAAON,iBAAiB,GAAG,EAAH,GAAQU,SAAhC;AACtCF,IAAAA,KAAK,GAAGL,CAAC,CAACQ,UAAF,CAAaN,QAAb,CAAR;AACA,WAAOG,KAAK,GAAG,MAAR,IAAkBA,KAAK,GAAG,MAA1B,IAAoCH,QAAQ,GAAG,CAAX,KAAiBC,IAArD,IACF,CAACG,MAAM,GAAGN,CAAC,CAACQ,UAAF,CAAaN,QAAQ,GAAG,CAAxB,CAAV,IAAwC,MADtC,IACgDI,MAAM,GAAG,MADzD,GAEDT,iBAAiB,GAAGG,CAAC,CAACS,MAAF,CAASP,QAAT,CAAH,GAAwBG,KAFxC,GAGDR,iBAAiB,GAAGG,CAAC,CAACU,KAAF,CAAQR,QAAR,EAAkBA,QAAQ,GAAG,CAA7B,CAAH,GAAqC,CAACG,KAAK,GAAG,MAAR,IAAkB,EAAnB,KAA0BC,MAAM,GAAG,MAAnC,IAA6C,OAHzG;AAID,GAXD;AAYD,CAbD;;AAeAK,MAAM,CAACC,OAAP,GAAiB;AACf;AACA;AACAC,EAAAA,MAAM,EAAEjB,YAAY,CAAC,KAAD,CAHL;AAIf;AACA;AACAa,EAAAA,MAAM,EAAEb,YAAY,CAAC,IAAD;AANL,CAAjB","sourcesContent":["var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n"]}]}