{"remainingRequest":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/babel-loader/lib/index.js??ref--3-1!/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/core-js/internals/regexp-exec.js","dependencies":[{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/core-js/internals/regexp-exec.js","mtime":1603041181476},{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/cache-loader/dist/cjs.js","mtime":1603041438982},{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/babel-loader/lib/index.js","mtime":1603041438713}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKdmFyIHJlZ2V4cEZsYWdzID0gcmVxdWlyZSgnLi9yZWdleHAtZmxhZ3MnKTsKCnZhciBzdGlja3lIZWxwZXJzID0gcmVxdWlyZSgnLi9yZWdleHAtc3RpY2t5LWhlbHBlcnMnKTsKCnZhciBuYXRpdmVFeGVjID0gUmVnRXhwLnByb3RvdHlwZS5leGVjOyAvLyBUaGlzIGFsd2F5cyByZWZlcnMgdG8gdGhlIG5hdGl2ZSBpbXBsZW1lbnRhdGlvbiwgYmVjYXVzZSB0aGUKLy8gU3RyaW5nI3JlcGxhY2UgcG9seWZpbGwgdXNlcyAuL2ZpeC1yZWdleHAtd2VsbC1rbm93bi1zeW1ib2wtbG9naWMuanMsCi8vIHdoaWNoIGxvYWRzIHRoaXMgZmlsZSBiZWZvcmUgcGF0Y2hpbmcgdGhlIG1ldGhvZC4KCnZhciBuYXRpdmVSZXBsYWNlID0gU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlOwp2YXIgcGF0Y2hlZEV4ZWMgPSBuYXRpdmVFeGVjOwoKdmFyIFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORyA9IGZ1bmN0aW9uICgpIHsKICB2YXIgcmUxID0gL2EvOwogIHZhciByZTIgPSAvYiovZzsKICBuYXRpdmVFeGVjLmNhbGwocmUxLCAnYScpOwogIG5hdGl2ZUV4ZWMuY2FsbChyZTIsICdhJyk7CiAgcmV0dXJuIHJlMS5sYXN0SW5kZXggIT09IDAgfHwgcmUyLmxhc3RJbmRleCAhPT0gMDsKfSgpOwoKdmFyIFVOU1VQUE9SVEVEX1kgPSBzdGlja3lIZWxwZXJzLlVOU1VQUE9SVEVEX1kgfHwgc3RpY2t5SGVscGVycy5CUk9LRU5fQ0FSRVQ7IC8vIG5vbnBhcnRpY2lwYXRpbmcgY2FwdHVyaW5nIGdyb3VwLCBjb3BpZWQgZnJvbSBlczUtc2hpbSdzIFN0cmluZyNzcGxpdCBwYXRjaC4KCnZhciBOUENHX0lOQ0xVREVEID0gLygpPz8vLmV4ZWMoJycpWzFdICE9PSB1bmRlZmluZWQ7CnZhciBQQVRDSCA9IFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORyB8fCBOUENHX0lOQ0xVREVEIHx8IFVOU1VQUE9SVEVEX1k7CgppZiAoUEFUQ0gpIHsKICBwYXRjaGVkRXhlYyA9IGZ1bmN0aW9uIGV4ZWMoc3RyKSB7CiAgICB2YXIgcmUgPSB0aGlzOwogICAgdmFyIGxhc3RJbmRleCwgcmVDb3B5LCBtYXRjaCwgaTsKICAgIHZhciBzdGlja3kgPSBVTlNVUFBPUlRFRF9ZICYmIHJlLnN0aWNreTsKICAgIHZhciBmbGFncyA9IHJlZ2V4cEZsYWdzLmNhbGwocmUpOwogICAgdmFyIHNvdXJjZSA9IHJlLnNvdXJjZTsKICAgIHZhciBjaGFyc0FkZGVkID0gMDsKICAgIHZhciBzdHJDb3B5ID0gc3RyOwoKICAgIGlmIChzdGlja3kpIHsKICAgICAgZmxhZ3MgPSBmbGFncy5yZXBsYWNlKCd5JywgJycpOwoKICAgICAgaWYgKGZsYWdzLmluZGV4T2YoJ2cnKSA9PT0gLTEpIHsKICAgICAgICBmbGFncyArPSAnZyc7CiAgICAgIH0KCiAgICAgIHN0ckNvcHkgPSBTdHJpbmcoc3RyKS5zbGljZShyZS5sYXN0SW5kZXgpOyAvLyBTdXBwb3J0IGFuY2hvcmVkIHN0aWNreSBiZWhhdmlvci4KCiAgICAgIGlmIChyZS5sYXN0SW5kZXggPiAwICYmICghcmUubXVsdGlsaW5lIHx8IHJlLm11bHRpbGluZSAmJiBzdHJbcmUubGFzdEluZGV4IC0gMV0gIT09ICdcbicpKSB7CiAgICAgICAgc291cmNlID0gJyg/OiAnICsgc291cmNlICsgJyknOwogICAgICAgIHN0ckNvcHkgPSAnICcgKyBzdHJDb3B5OwogICAgICAgIGNoYXJzQWRkZWQrKzsKICAgICAgfSAvLyBeKD8gKyByeCArICkgaXMgbmVlZGVkLCBpbiBjb21iaW5hdGlvbiB3aXRoIHNvbWUgc3RyIHNsaWNpbmcsIHRvCiAgICAgIC8vIHNpbXVsYXRlIHRoZSAneScgZmxhZy4KCgogICAgICByZUNvcHkgPSBuZXcgUmVnRXhwKCdeKD86JyArIHNvdXJjZSArICcpJywgZmxhZ3MpOwogICAgfQoKICAgIGlmIChOUENHX0lOQ0xVREVEKSB7CiAgICAgIHJlQ29weSA9IG5ldyBSZWdFeHAoJ14nICsgc291cmNlICsgJyQoPyFcXHMpJywgZmxhZ3MpOwogICAgfQoKICAgIGlmIChVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcpIGxhc3RJbmRleCA9IHJlLmxhc3RJbmRleDsKICAgIG1hdGNoID0gbmF0aXZlRXhlYy5jYWxsKHN0aWNreSA/IHJlQ29weSA6IHJlLCBzdHJDb3B5KTsKCiAgICBpZiAoc3RpY2t5KSB7CiAgICAgIGlmIChtYXRjaCkgewogICAgICAgIG1hdGNoLmlucHV0ID0gbWF0Y2guaW5wdXQuc2xpY2UoY2hhcnNBZGRlZCk7CiAgICAgICAgbWF0Y2hbMF0gPSBtYXRjaFswXS5zbGljZShjaGFyc0FkZGVkKTsKICAgICAgICBtYXRjaC5pbmRleCA9IHJlLmxhc3RJbmRleDsKICAgICAgICByZS5sYXN0SW5kZXggKz0gbWF0Y2hbMF0ubGVuZ3RoOwogICAgICB9IGVsc2UgcmUubGFzdEluZGV4ID0gMDsKICAgIH0gZWxzZSBpZiAoVVBEQVRFU19MQVNUX0lOREVYX1dST05HICYmIG1hdGNoKSB7CiAgICAgIHJlLmxhc3RJbmRleCA9IHJlLmdsb2JhbCA/IG1hdGNoLmluZGV4ICsgbWF0Y2hbMF0ubGVuZ3RoIDogbGFzdEluZGV4OwogICAgfQoKICAgIGlmIChOUENHX0lOQ0xVREVEICYmIG1hdGNoICYmIG1hdGNoLmxlbmd0aCA+IDEpIHsKICAgICAgLy8gRml4IGJyb3dzZXJzIHdob3NlIGBleGVjYCBtZXRob2RzIGRvbid0IGNvbnNpc3RlbnRseSByZXR1cm4gYHVuZGVmaW5lZGAKICAgICAgLy8gZm9yIE5QQ0csIGxpa2UgSUU4LiBOT1RFOiBUaGlzIGRvZXNuJyB3b3JrIGZvciAvKC4/KT8vCiAgICAgIG5hdGl2ZVJlcGxhY2UuY2FsbChtYXRjaFswXSwgcmVDb3B5LCBmdW5jdGlvbiAoKSB7CiAgICAgICAgZm9yIChpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGggLSAyOyBpKyspIHsKICAgICAgICAgIGlmIChhcmd1bWVudHNbaV0gPT09IHVuZGVmaW5lZCkgbWF0Y2hbaV0gPSB1bmRlZmluZWQ7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KCiAgICByZXR1cm4gbWF0Y2g7CiAgfTsKfQoKbW9kdWxlLmV4cG9ydHMgPSBwYXRjaGVkRXhlYzs="},{"version":3,"sources":["/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/core-js/internals/regexp-exec.js"],"names":["regexpFlags","require","stickyHelpers","nativeExec","RegExp","prototype","exec","nativeReplace","String","replace","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","call","lastIndex","UNSUPPORTED_Y","BROKEN_CARET","NPCG_INCLUDED","undefined","PATCH","str","re","reCopy","match","i","sticky","flags","source","charsAdded","strCopy","indexOf","slice","multiline","input","index","length","global","arguments","module","exports"],"mappings":"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","sourcesContent":["'use strict';\nvar regexpFlags = require('./regexp-flags');\nvar stickyHelpers = require('./regexp-sticky-helpers');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = String(str).slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n"]}]}