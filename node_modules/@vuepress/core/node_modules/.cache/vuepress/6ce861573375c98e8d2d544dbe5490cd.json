{"remainingRequest":"/opt/mygitblog/XiaoDongZhi.github.io/node_modules/babel-loader/lib/index.js??ref--3-1!/opt/mygitblog/XiaoDongZhi.github.io/node_modules/@vuepress/core/lib/client/serverEntry.js","dependencies":[{"path":"/opt/mygitblog/XiaoDongZhi.github.io/node_modules/@vuepress/core/lib/client/serverEntry.js","mtime":1604132492005},{"path":"/opt/mygitblog/XiaoDongZhi.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1604132492265},{"path":"/opt/mygitblog/XiaoDongZhi.github.io/node_modules/babel-loader/lib/index.js","mtime":1604132492237}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiL29wdC9teWdpdGJsb2cvWGlhb0RvbmdaaGkuZ2l0aHViLmlvL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3IuanMiOwppbXBvcnQgIi9vcHQvbXlnaXRibG9nL1hpYW9Eb25nWmhpLmdpdGh1Yi5pby9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2UuanMiOwppbXBvcnQgIi9vcHQvbXlnaXRibG9nL1hpYW9Eb25nWmhpLmdpdGh1Yi5pby9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5hc3NpZ24uanMiOwppbXBvcnQgIi9vcHQvbXlnaXRibG9nL1hpYW9Eb25nWmhpLmdpdGh1Yi5pby9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2UuZmluYWxseS5qcyI7CmltcG9ydCB7IGNyZWF0ZUFwcCB9IGZyb20gJy4vYXBwJzsKZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIChjb250ZXh0KSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIGNyZWF0ZUFwcCh0cnVlCiAgICAvKiBpc1NlcnZlciAqLwogICAgKS50aGVuKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgIHZhciBhcHAgPSBfcmVmLmFwcCwKICAgICAgICAgIHJvdXRlciA9IF9yZWYucm91dGVyOwogICAgICB2YXIgdXJsID0gY29udGV4dC51cmw7CiAgICAgIHZhciBmdWxsUGF0aCA9IHJvdXRlci5yZXNvbHZlKHVybCkucm91dGUuZnVsbFBhdGg7CgogICAgICBpZiAoZnVsbFBhdGggIT09IHVybCkgewogICAgICAgIHJldHVybiByZWplY3QoewogICAgICAgICAgdXJsOiBmdWxsUGF0aAogICAgICAgIH0pOwogICAgICB9CgogICAgICByb3V0ZXIucHVzaCh1cmwpOwogICAgICByb3V0ZXIub25SZWFkeShmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHJlc29sdmUoYXBwKTsKICAgICAgfSk7CiAgICB9KTsKICB9KTsKfSk7"},{"version":3,"sources":["/opt/mygitblog/XiaoDongZhi.github.io/node_modules/@vuepress/core/lib/client/serverEntry.js"],"names":["createApp","context","Promise","resolve","reject","then","app","router","url","fullPath","route","push","onReady"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,gBAAe,UAAAC,OAAO;AAAA,SAAI,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACzDJ,IAAAA,SAAS,CAAC;AAAK;AAAN,KAAT,CAA+BK,IAA/B,CAAoC,gBAAqB;AAAA,UAAlBC,GAAkB,QAAlBA,GAAkB;AAAA,UAAbC,MAAa,QAAbA,MAAa;AAAA,UAC/CC,GAD+C,GACvCP,OADuC,CAC/CO,GAD+C;AAAA,UAE/CC,QAF+C,GAElCF,MAAM,CAACJ,OAAP,CAAeK,GAAf,EAAoBE,KAFc,CAE/CD,QAF+C;;AAIvD,UAAIA,QAAQ,KAAKD,GAAjB,EAAsB;AACpB,eAAOJ,MAAM,CAAC;AAAEI,UAAAA,GAAG,EAAEC;AAAP,SAAD,CAAb;AACD;;AAEDF,MAAAA,MAAM,CAACI,IAAP,CAAYH,GAAZ;AACAD,MAAAA,MAAM,CAACK,OAAP,CAAe;AAAA,eAAMT,OAAO,CAACG,GAAD,CAAb;AAAA,OAAf;AACD,KAVD;AAWD,GAZyB,CAAJ;AAAA,CAAtB","sourcesContent":["import { createApp } from './app'\n\nexport default context => new Promise((resolve, reject) => {\n  createApp(true /* isServer */).then(({ app, router }) => {\n    const { url } = context\n    const { fullPath } = router.resolve(url).route\n\n    if (fullPath !== url) {\n      return reject({ url: fullPath })\n    }\n\n    router.push(url)\n    router.onReady(() => resolve(app))\n  })\n})\n"]}]}