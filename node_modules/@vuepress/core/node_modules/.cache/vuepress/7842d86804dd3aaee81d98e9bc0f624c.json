{"remainingRequest":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/vuepress-theme-reco/components/NavLinks.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/vuepress-theme-reco/components/NavLinks.vue","mtime":1604064593079},{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/cache-loader/dist/cjs.js","mtime":1603041438982},{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/babel-loader/lib/index.js","mtime":1603041438713},{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/cache-loader/dist/cjs.js","mtime":1603041438982},{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/vue-loader/lib/index.js","mtime":1604064588383}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBEcm9wZG93bkxpbmsgZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvRHJvcGRvd25MaW5rJwppbXBvcnQgeyByZXNvbHZlTmF2TGlua0l0ZW0gfSBmcm9tICdAdGhlbWUvaGVscGVycy91dGlscycKaW1wb3J0IE5hdkxpbmsgZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvTmF2TGluaycKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IE5hdkxpbmssIERyb3Bkb3duTGluayB9LAoKICBjb21wdXRlZDogewogICAgdXNlck5hdiAoKSB7CiAgICAgIHJldHVybiB0aGlzLiR0aGVtZUxvY2FsZUNvbmZpZy5uYXYgfHwgdGhpcy4kdGhlbWVDb25maWcubmF2IHx8IFtdCiAgICB9LAoKICAgIG5hdiAoKSB7CiAgICAgIGNvbnN0IHsgJHNpdGU6IHsgbG9jYWxlcyB9LCB1c2VyTmF2IH0gPSB0aGlzCiAgICAgIGlmIChsb2NhbGVzICYmIE9iamVjdC5rZXlzKGxvY2FsZXMpLmxlbmd0aCA+IDEpIHsKICAgICAgICBjb25zdCBjdXJyZW50TGluayA9IHRoaXMuJHBhZ2UucGF0aAogICAgICAgIGNvbnN0IHJvdXRlcyA9IHRoaXMuJHJvdXRlci5vcHRpb25zLnJvdXRlcwogICAgICAgIGNvbnN0IHRoZW1lTG9jYWxlcyA9IHRoaXMuJHRoZW1lQ29uZmlnLmxvY2FsZXMgfHwge30KICAgICAgICBjb25zdCBsYW5ndWFnZURyb3Bkb3duID0gewogICAgICAgICAgdGV4dDogdGhpcy4kdGhlbWVMb2NhbGVDb25maWcuc2VsZWN0VGV4dCB8fCAnTGFuZ3VhZ2VzJywKICAgICAgICAgIGl0ZW1zOiBPYmplY3Qua2V5cyhsb2NhbGVzKS5tYXAocGF0aCA9PiB7CiAgICAgICAgICAgIGNvbnN0IGxvY2FsZSA9IGxvY2FsZXNbcGF0aF0KICAgICAgICAgICAgY29uc3QgdGV4dCA9IHRoZW1lTG9jYWxlc1twYXRoXSAmJiB0aGVtZUxvY2FsZXNbcGF0aF0ubGFiZWwgfHwgbG9jYWxlLmxhbmcKICAgICAgICAgICAgbGV0IGxpbmsKICAgICAgICAgICAgLy8gU3RheSBvbiB0aGUgY3VycmVudCBwYWdlCiAgICAgICAgICAgIGlmIChsb2NhbGUubGFuZyA9PT0gdGhpcy4kbGFuZykgewogICAgICAgICAgICAgIGxpbmsgPSBjdXJyZW50TGluawogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vIFRyeSB0byBzdGF5IG9uIHRoZSBzYW1lIHBhZ2UKICAgICAgICAgICAgICBsaW5rID0gY3VycmVudExpbmsucmVwbGFjZSh0aGlzLiRsb2NhbGVDb25maWcucGF0aCwgcGF0aCkKICAgICAgICAgICAgICAvLyBmYWxsYmFjayB0byBob21lcGFnZQogICAgICAgICAgICAgIGlmICghcm91dGVzLnNvbWUocm91dGUgPT4gcm91dGUucGF0aCA9PT0gbGluaykpIHsKICAgICAgICAgICAgICAgIGxpbmsgPSBwYXRoCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB7IHRleHQsIGxpbmsgfQogICAgICAgICAgfSkKICAgICAgICB9CiAgICAgICAgcmV0dXJuIFsuLi51c2VyTmF2LCBsYW5ndWFnZURyb3Bkb3duXQogICAgICB9CgogICAgICAvLyBibG9nQ29uZmlnIOeahOWkhOeQhu+8jOaguee7nemFjee9ruiHquWKqOa3u+WKoOWIhuexu+WSjOagh+etvgogICAgICBjb25zdCBibG9nQ29uZmlnID0gdGhpcy4kdGhlbWVDb25maWcuYmxvZ0NvbmZpZyB8fCB7fQogICAgICBjb25zdCBpc0hhc0NhdGVnb3J5ID0gdXNlck5hdi5zb21lKGl0ZW0gPT4gewogICAgICAgIGlmIChibG9nQ29uZmlnLmNhdGVnb3J5KSB7CiAgICAgICAgICByZXR1cm4gaXRlbS50ZXh0ID09PSAoYmxvZ0NvbmZpZy5jYXRlZ29yeS50ZXh0IHx8ICfliIbnsbsnKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KICAgICAgfSkKICAgICAgY29uc3QgaXNIYXNUYWcgPSB1c2VyTmF2LnNvbWUoaXRlbSA9PiB7CiAgICAgICAgaWYgKGJsb2dDb25maWcudGFnKSB7CiAgICAgICAgICByZXR1cm4gaXRlbS50ZXh0ID09PSAoYmxvZ0NvbmZpZy50YWcudGV4dCB8fCAn5qCH562+JykKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9CiAgICAgIH0pCgogICAgICBpZiAoIWlzSGFzQ2F0ZWdvcnkgJiYgT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwoYmxvZ0NvbmZpZywgJ2NhdGVnb3J5JykpIHsKICAgICAgICBjb25zdCBjYXRlZ29yeSA9IGJsb2dDb25maWcuY2F0ZWdvcnkKICAgICAgICBjb25zdCAkY2F0ZWdvcmllcyA9IHRoaXMuJGNhdGVnb3JpZXMKICAgICAgICB1c2VyTmF2LnNwbGljZShwYXJzZUludChjYXRlZ29yeS5sb2NhdGlvbiB8fCAyKSAtIDEsIDAsIHsKICAgICAgICAgIGl0ZW1zOiAkY2F0ZWdvcmllcy5saXN0Lm1hcChpdGVtID0+IHsKICAgICAgICAgICAgaXRlbS5saW5rID0gaXRlbS5wYXRoCiAgICAgICAgICAgIGl0ZW0udGV4dCA9IGl0ZW0ubmFtZQogICAgICAgICAgICByZXR1cm4gaXRlbQogICAgICAgICAgfSksCiAgICAgICAgICB0ZXh0OiBjYXRlZ29yeS50ZXh0IHx8ICfliIbnsbsnLAogICAgICAgICAgdHlwZTogJ2xpbmtzJywKICAgICAgICAgIGljb246ICdyZWNvLWNhdGVnb3J5JwogICAgICAgIH0pCiAgICAgIH0KICAgICAgaWYgKCFpc0hhc1RhZyAmJiBPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChibG9nQ29uZmlnLCAndGFnJykpIHsKICAgICAgICBjb25zdCB0YWcgPSBibG9nQ29uZmlnLnRhZwogICAgICAgIHVzZXJOYXYuc3BsaWNlKHBhcnNlSW50KHRhZy5sb2NhdGlvbiB8fCAzKSAtIDEsIDAsIHsKICAgICAgICAgIGxpbms6ICcvdGFnLycsCiAgICAgICAgICB0ZXh0OiB0YWcudGV4dCB8fCAn5qCH562+JywKICAgICAgICAgIHR5cGU6ICdsaW5rcycsCiAgICAgICAgICBpY29uOiAncmVjby10YWcnCiAgICAgICAgfSkKICAgICAgfQoKICAgICAgcmV0dXJuIHVzZXJOYXYKICAgIH0sCgogICAgdXNlckxpbmtzICgpIHsKICAgICAgcmV0dXJuICh0aGlzLm5hdiB8fCBbXSkubWFwKGxpbmsgPT4gewogICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHJlc29sdmVOYXZMaW5rSXRlbShsaW5rKSwgewogICAgICAgICAgaXRlbXM6IChsaW5rLml0ZW1zIHx8IFtdKS5tYXAocmVzb2x2ZU5hdkxpbmtJdGVtKQogICAgICAgIH0pCiAgICAgIH0pCiAgICB9LAoKICAgIHJlcG9MaW5rICgpIHsKICAgICAgY29uc3QgeyByZXBvIH0gPSB0aGlzLiR0aGVtZUNvbmZpZwogICAgICBpZiAocmVwbykgewogICAgICAgIHJldHVybiAvXmh0dHBzPzovLnRlc3QocmVwbykKICAgICAgICAgID8gcmVwbwogICAgICAgICAgOiBgaHR0cHM6Ly9naXRodWIuY29tLyR7cmVwb31gCiAgICAgIH0KICAgICAgcmV0dXJuICcnCiAgICB9LAoKICAgIHJlcG9MYWJlbCAoKSB7CiAgICAgIGlmICghdGhpcy5yZXBvTGluaykgcmV0dXJuCiAgICAgIGlmICh0aGlzLiR0aGVtZUNvbmZpZy5yZXBvTGFiZWwpIHsKICAgICAgICByZXR1cm4gdGhpcy4kdGhlbWVDb25maWcucmVwb0xhYmVsCiAgICAgIH0KCiAgICAgIGNvbnN0IHJlcG9Ib3N0ID0gdGhpcy5yZXBvTGluay5tYXRjaCgvXmh0dHBzPzpcL1wvW14vXSsvKVswXQogICAgICBjb25zdCBwbGF0Zm9ybXMgPSBbJ0dpdEh1YicsICdHaXRMYWInLCAnQml0YnVja2V0J10KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwbGF0Zm9ybXMubGVuZ3RoOyBpKyspIHsKICAgICAgICBjb25zdCBwbGF0Zm9ybSA9IHBsYXRmb3Jtc1tpXQogICAgICAgIGlmIChuZXcgUmVnRXhwKHBsYXRmb3JtLCAnaScpLnRlc3QocmVwb0hvc3QpKSB7CiAgICAgICAgICByZXR1cm4gcGxhdGZvcm0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiAnU291cmNlJwogICAgfQogIH0KfQo="},{"version":3,"sources":["NavLinks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"NavLinks.vue","sourceRoot":"node_modules/vuepress-theme-reco/components","sourcesContent":["<template>\n  <nav\n    class=\"nav-links\"\n    v-if=\"userLinks.length || repoLink\"\n  >\n    <!-- user links -->\n    <div\n      class=\"nav-item\"\n      v-for=\"item in userLinks\"\n      :key=\"item.link\">\n      <DropdownLink\n        v-if=\"item.type === 'links'\"\n        :item=\"item\"/>\n      <NavLink\n        v-else\n        :item=\"item\"/>\n    </div>\n\n    <!-- repo link -->\n    <a\n      v-if=\"repoLink\"\n      :href=\"repoLink\"\n      class=\"repo-link\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <i :class=\"`iconfont reco-${repoLabel.toLowerCase()}`\"></i>\n      {{ repoLabel }}\n      <OutboundLink/>\n    </a>\n  </nav>\n</template>\n\n<script>\nimport DropdownLink from '@theme/components/DropdownLink'\nimport { resolveNavLinkItem } from '@theme/helpers/utils'\nimport NavLink from '@theme/components/NavLink'\n\nexport default {\n  components: { NavLink, DropdownLink },\n\n  computed: {\n    userNav () {\n      return this.$themeLocaleConfig.nav || this.$themeConfig.nav || []\n    },\n\n    nav () {\n      const { $site: { locales }, userNav } = this\n      if (locales && Object.keys(locales).length > 1) {\n        const currentLink = this.$page.path\n        const routes = this.$router.options.routes\n        const themeLocales = this.$themeConfig.locales || {}\n        const languageDropdown = {\n          text: this.$themeLocaleConfig.selectText || 'Languages',\n          items: Object.keys(locales).map(path => {\n            const locale = locales[path]\n            const text = themeLocales[path] && themeLocales[path].label || locale.lang\n            let link\n            // Stay on the current page\n            if (locale.lang === this.$lang) {\n              link = currentLink\n            } else {\n              // Try to stay on the same page\n              link = currentLink.replace(this.$localeConfig.path, path)\n              // fallback to homepage\n              if (!routes.some(route => route.path === link)) {\n                link = path\n              }\n            }\n            return { text, link }\n          })\n        }\n        return [...userNav, languageDropdown]\n      }\n\n      // blogConfig 的处理，根绝配置自动添加分类和标签\n      const blogConfig = this.$themeConfig.blogConfig || {}\n      const isHasCategory = userNav.some(item => {\n        if (blogConfig.category) {\n          return item.text === (blogConfig.category.text || '分类')\n        } else {\n          return true\n        }\n      })\n      const isHasTag = userNav.some(item => {\n        if (blogConfig.tag) {\n          return item.text === (blogConfig.tag.text || '标签')\n        } else {\n          return true\n        }\n      })\n\n      if (!isHasCategory && Object.hasOwnProperty.call(blogConfig, 'category')) {\n        const category = blogConfig.category\n        const $categories = this.$categories\n        userNav.splice(parseInt(category.location || 2) - 1, 0, {\n          items: $categories.list.map(item => {\n            item.link = item.path\n            item.text = item.name\n            return item\n          }),\n          text: category.text || '分类',\n          type: 'links',\n          icon: 'reco-category'\n        })\n      }\n      if (!isHasTag && Object.hasOwnProperty.call(blogConfig, 'tag')) {\n        const tag = blogConfig.tag\n        userNav.splice(parseInt(tag.location || 3) - 1, 0, {\n          link: '/tag/',\n          text: tag.text || '标签',\n          type: 'links',\n          icon: 'reco-tag'\n        })\n      }\n\n      return userNav\n    },\n\n    userLinks () {\n      return (this.nav || []).map(link => {\n        return Object.assign(resolveNavLinkItem(link), {\n          items: (link.items || []).map(resolveNavLinkItem)\n        })\n      })\n    },\n\n    repoLink () {\n      const { repo } = this.$themeConfig\n      if (repo) {\n        return /^https?:/.test(repo)\n          ? repo\n          : `https://github.com/${repo}`\n      }\n      return ''\n    },\n\n    repoLabel () {\n      if (!this.repoLink) return\n      if (this.$themeConfig.repoLabel) {\n        return this.$themeConfig.repoLabel\n      }\n\n      const repoHost = this.repoLink.match(/^https?:\\/\\/[^/]+/)[0]\n      const platforms = ['GitHub', 'GitLab', 'Bitbucket']\n      for (let i = 0; i < platforms.length; i++) {\n        const platform = platforms[i]\n        if (new RegExp(platform, 'i').test(repoHost)) {\n          return platform\n        }\n      }\n\n      return 'Source'\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n.nav-links\n  display inline-block\n  a\n    line-height 1.4rem\n    color var(--text-color)\n    &:hover, &.router-link-active\n      color $accentColor\n      .iconfont\n        color $accentColor\n  .nav-item\n    position relative\n    display inline-block\n    margin-left 1.5rem\n    line-height 2rem\n    &:first-child\n      margin-left 0\n  .repo-link\n    margin-left 1.5rem\n\n@media (max-width: $MQMobile)\n  .nav-links\n    .nav-item, .repo-link\n      margin-left 0\n\n@media (min-width: $MQMobile)\n  .nav-item > a:not(.external)\n    &:hover, &.router-link-active\n      margin-bottom -2px\n</style>\n"]}]}