{"remainingRequest":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/babel-loader/lib/index.js??ref--3-1!/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/core-js/modules/es.date.to-string.js","dependencies":[{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/core-js/modules/es.date.to-string.js","mtime":1603041181476},{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/cache-loader/dist/cjs.js","mtime":1603041438982},{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/babel-loader/lib/index.js","mtime":1603041438713}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZGVmaW5lJyk7Cgp2YXIgRGF0ZVByb3RvdHlwZSA9IERhdGUucHJvdG90eXBlOwp2YXIgSU5WQUxJRF9EQVRFID0gJ0ludmFsaWQgRGF0ZSc7CnZhciBUT19TVFJJTkcgPSAndG9TdHJpbmcnOwp2YXIgbmF0aXZlRGF0ZVRvU3RyaW5nID0gRGF0ZVByb3RvdHlwZVtUT19TVFJJTkddOwp2YXIgZ2V0VGltZSA9IERhdGVQcm90b3R5cGUuZ2V0VGltZTsgLy8gYERhdGUucHJvdG90eXBlLnRvU3RyaW5nYCBtZXRob2QKLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtZGF0ZS5wcm90b3R5cGUudG9zdHJpbmcKCmlmIChuZXcgRGF0ZShOYU4pICsgJycgIT0gSU5WQUxJRF9EQVRFKSB7CiAgcmVkZWZpbmUoRGF0ZVByb3RvdHlwZSwgVE9fU1RSSU5HLCBmdW5jdGlvbiB0b1N0cmluZygpIHsKICAgIHZhciB2YWx1ZSA9IGdldFRpbWUuY2FsbCh0aGlzKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZQoKICAgIHJldHVybiB2YWx1ZSA9PT0gdmFsdWUgPyBuYXRpdmVEYXRlVG9TdHJpbmcuY2FsbCh0aGlzKSA6IElOVkFMSURfREFURTsKICB9KTsKfQ=="},{"version":3,"sources":["/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/core-js/modules/es.date.to-string.js"],"names":["redefine","require","DatePrototype","Date","prototype","INVALID_DATE","TO_STRING","nativeDateToString","getTime","NaN","toString","value","call"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAIC,aAAa,GAAGC,IAAI,CAACC,SAAzB;AACA,IAAIC,YAAY,GAAG,cAAnB;AACA,IAAIC,SAAS,GAAG,UAAhB;AACA,IAAIC,kBAAkB,GAAGL,aAAa,CAACI,SAAD,CAAtC;AACA,IAAIE,OAAO,GAAGN,aAAa,CAACM,OAA5B,C,CAEA;AACA;;AACA,IAAI,IAAIL,IAAJ,CAASM,GAAT,IAAgB,EAAhB,IAAsBJ,YAA1B,EAAwC;AACtCL,EAAAA,QAAQ,CAACE,aAAD,EAAgBI,SAAhB,EAA2B,SAASI,QAAT,GAAoB;AACrD,QAAIC,KAAK,GAAGH,OAAO,CAACI,IAAR,CAAa,IAAb,CAAZ,CADqD,CAErD;;AACA,WAAOD,KAAK,KAAKA,KAAV,GAAkBJ,kBAAkB,CAACK,IAAnB,CAAwB,IAAxB,CAAlB,GAAkDP,YAAzD;AACD,GAJO,CAAR;AAKD","sourcesContent":["var redefine = require('../internals/redefine');\n\nvar DatePrototype = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar nativeDateToString = DatePrototype[TO_STRING];\nvar getTime = DatePrototype.getTime;\n\n// `Date.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-date.prototype.tostring\nif (new Date(NaN) + '' != INVALID_DATE) {\n  redefine(DatePrototype, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? nativeDateToString.call(this) : INVALID_DATE;\n  });\n}\n"]}]}