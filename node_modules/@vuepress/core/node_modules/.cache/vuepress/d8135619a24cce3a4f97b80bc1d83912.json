{"remainingRequest":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/babel-loader/lib/index.js??ref--3-1!/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/webpack-dev-server/client/utils/reloadApp.js","dependencies":[{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/webpack-dev-server/client/utils/reloadApp.js","mtime":1603041443588},{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/cache-loader/dist/cjs.js","mtime":1603041438982},{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/babel-loader/lib/index.js","mtime":1603041438713}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwovKiBnbG9iYWwgV29ya2VyR2xvYmFsU2NvcGUgc2VsZiAqLwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL3dlYi50aW1lcnMiKTsKCnZhciBfcmVxdWlyZSA9IHJlcXVpcmUoJy4vbG9nJyksCiAgICBsb2cgPSBfcmVxdWlyZS5sb2c7CgpmdW5jdGlvbiByZWxvYWRBcHAoX3JlZiwgX3JlZjIpIHsKICB2YXIgaG90UmVsb2FkID0gX3JlZi5ob3RSZWxvYWQsCiAgICAgIGhvdCA9IF9yZWYuaG90LAogICAgICBsaXZlUmVsb2FkID0gX3JlZi5saXZlUmVsb2FkOwogIHZhciBpc1VubG9hZGluZyA9IF9yZWYyLmlzVW5sb2FkaW5nLAogICAgICBjdXJyZW50SGFzaCA9IF9yZWYyLmN1cnJlbnRIYXNoOwoKICBpZiAoaXNVbmxvYWRpbmcgfHwgIWhvdFJlbG9hZCkgewogICAgcmV0dXJuOwogIH0KCiAgaWYgKGhvdCkgewogICAgbG9nLmluZm8oJ1tXRFNdIEFwcCBob3QgdXBkYXRlLi4uJyk7CgogICAgdmFyIGhvdEVtaXR0ZXIgPSByZXF1aXJlKCd3ZWJwYWNrL2hvdC9lbWl0dGVyJyk7CgogICAgaG90RW1pdHRlci5lbWl0KCd3ZWJwYWNrSG90VXBkYXRlJywgY3VycmVudEhhc2gpOwoKICAgIGlmICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi53aW5kb3cpIHsKICAgICAgLy8gYnJvYWRjYXN0IHVwZGF0ZSB0byB3aW5kb3cKICAgICAgc2VsZi5wb3N0TWVzc2FnZSgid2VicGFja0hvdFVwZGF0ZSIuY29uY2F0KGN1cnJlbnRIYXNoKSwgJyonKTsKICAgIH0KICB9IC8vIGFsbG93IHJlZnJlc2hpbmcgdGhlIHBhZ2Ugb25seSBpZiBsaXZlUmVsb2FkIGlzbid0IGRpc2FibGVkCiAgZWxzZSBpZiAobGl2ZVJlbG9hZCkgewogICAgICB2YXIgcm9vdFdpbmRvdyA9IHNlbGY7IC8vIHVzZSBwYXJlbnQgd2luZG93IGZvciByZWxvYWQgKGluIGNhc2Ugd2UncmUgaW4gYW4gaWZyYW1lIHdpdGggbm8gdmFsaWQgc3JjKQoKICAgICAgdmFyIGludGVydmFsSWQgPSBzZWxmLnNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAocm9vdFdpbmRvdy5sb2NhdGlvbi5wcm90b2NvbCAhPT0gJ2Fib3V0OicpIHsKICAgICAgICAgIC8vIHJlbG9hZCBpbW1lZGlhdGVseSBpZiBwcm90b2NvbCBpcyB2YWxpZAogICAgICAgICAgYXBwbHlSZWxvYWQocm9vdFdpbmRvdywgaW50ZXJ2YWxJZCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJvb3RXaW5kb3cgPSByb290V2luZG93LnBhcmVudDsKCiAgICAgICAgICBpZiAocm9vdFdpbmRvdy5wYXJlbnQgPT09IHJvb3RXaW5kb3cpIHsKICAgICAgICAgICAgLy8gaWYgcGFyZW50IGVxdWFscyBjdXJyZW50IHdpbmRvdyB3ZSd2ZSByZWFjaGVkIHRoZSByb290IHdoaWNoIHdvdWxkIGNvbnRpbnVlIGZvcmV2ZXIsIHNvIHRyaWdnZXIgYSByZWxvYWQgYW55d2F5cwogICAgICAgICAgICBhcHBseVJlbG9hZChyb290V2luZG93LCBpbnRlcnZhbElkKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgfQoKICBmdW5jdGlvbiBhcHBseVJlbG9hZChyb290V2luZG93LCBpbnRlcnZhbElkKSB7CiAgICBjbGVhckludGVydmFsKGludGVydmFsSWQpOwogICAgbG9nLmluZm8oJ1tXRFNdIEFwcCB1cGRhdGVkLiBSZWxvYWRpbmcuLi4nKTsKICAgIHJvb3RXaW5kb3cubG9jYXRpb24ucmVsb2FkKCk7CiAgfQp9Cgptb2R1bGUuZXhwb3J0cyA9IHJlbG9hZEFwcDs="},{"version":3,"sources":["/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/webpack-dev-server/client/utils/reloadApp.js"],"names":["_require","require","log","reloadApp","_ref","_ref2","hotReload","hot","liveReload","isUnloading","currentHash","info","hotEmitter","emit","self","window","postMessage","concat","rootWindow","intervalId","setInterval","location","protocol","applyReload","parent","clearInterval","reload","module","exports"],"mappings":"AAAA;AACA;;;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,OAAD,CAAtB;AAAA,IACIC,GAAG,GAAGF,QAAQ,CAACE,GADnB;;AAGA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAgC;AAC9B,MAAIC,SAAS,GAAGF,IAAI,CAACE,SAArB;AAAA,MACIC,GAAG,GAAGH,IAAI,CAACG,GADf;AAAA,MAEIC,UAAU,GAAGJ,IAAI,CAACI,UAFtB;AAGA,MAAIC,WAAW,GAAGJ,KAAK,CAACI,WAAxB;AAAA,MACIC,WAAW,GAAGL,KAAK,CAACK,WADxB;;AAGA,MAAID,WAAW,IAAI,CAACH,SAApB,EAA+B;AAC7B;AACD;;AAED,MAAIC,GAAJ,EAAS;AACPL,IAAAA,GAAG,CAACS,IAAJ,CAAS,yBAAT;;AAEA,QAAIC,UAAU,GAAGX,OAAO,CAAC,qBAAD,CAAxB;;AAEAW,IAAAA,UAAU,CAACC,IAAX,CAAgB,kBAAhB,EAAoCH,WAApC;;AAEA,QAAI,OAAOI,IAAP,KAAgB,WAAhB,IAA+BA,IAAI,CAACC,MAAxC,EAAgD;AAC9C;AACAD,MAAAA,IAAI,CAACE,WAAL,CAAiB,mBAAmBC,MAAnB,CAA0BP,WAA1B,CAAjB,EAAyD,GAAzD;AACD;AACF,GAXD,CAWE;AAXF,OAYK,IAAIF,UAAJ,EAAgB;AACjB,UAAIU,UAAU,GAAGJ,IAAjB,CADiB,CACM;;AAEvB,UAAIK,UAAU,GAAGL,IAAI,CAACM,WAAL,CAAiB,YAAY;AAC5C,YAAIF,UAAU,CAACG,QAAX,CAAoBC,QAApB,KAAiC,QAArC,EAA+C;AAC7C;AACAC,UAAAA,WAAW,CAACL,UAAD,EAAaC,UAAb,CAAX;AACD,SAHD,MAGO;AACLD,UAAAA,UAAU,GAAGA,UAAU,CAACM,MAAxB;;AAEA,cAAIN,UAAU,CAACM,MAAX,KAAsBN,UAA1B,EAAsC;AACpC;AACAK,YAAAA,WAAW,CAACL,UAAD,EAAaC,UAAb,CAAX;AACD;AACF;AACF,OAZgB,CAAjB;AAaD;;AAEH,WAASI,WAAT,CAAqBL,UAArB,EAAiCC,UAAjC,EAA6C;AAC3CM,IAAAA,aAAa,CAACN,UAAD,CAAb;AACAjB,IAAAA,GAAG,CAACS,IAAJ,CAAS,iCAAT;AACAO,IAAAA,UAAU,CAACG,QAAX,CAAoBK,MAApB;AACD;AACF;;AAEDC,MAAM,CAACC,OAAP,GAAiBzB,SAAjB","sourcesContent":["'use strict';\n/* global WorkerGlobalScope self */\n\nvar _require = require('./log'),\n    log = _require.log;\n\nfunction reloadApp(_ref, _ref2) {\n  var hotReload = _ref.hotReload,\n      hot = _ref.hot,\n      liveReload = _ref.liveReload;\n  var isUnloading = _ref2.isUnloading,\n      currentHash = _ref2.currentHash;\n\n  if (isUnloading || !hotReload) {\n    return;\n  }\n\n  if (hot) {\n    log.info('[WDS] App hot update...');\n\n    var hotEmitter = require('webpack/hot/emitter');\n\n    hotEmitter.emit('webpackHotUpdate', currentHash);\n\n    if (typeof self !== 'undefined' && self.window) {\n      // broadcast update to window\n      self.postMessage(\"webpackHotUpdate\".concat(currentHash), '*');\n    }\n  } // allow refreshing the page only if liveReload isn't disabled\n  else if (liveReload) {\n      var rootWindow = self; // use parent window for reload (in case we're in an iframe with no valid src)\n\n      var intervalId = self.setInterval(function () {\n        if (rootWindow.location.protocol !== 'about:') {\n          // reload immediately if protocol is valid\n          applyReload(rootWindow, intervalId);\n        } else {\n          rootWindow = rootWindow.parent;\n\n          if (rootWindow.parent === rootWindow) {\n            // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways\n            applyReload(rootWindow, intervalId);\n          }\n        }\n      });\n    }\n\n  function applyReload(rootWindow, intervalId) {\n    clearInterval(intervalId);\n    log.info('[WDS] App updated. Reloading...');\n    rootWindow.location.reload();\n  }\n}\n\nmodule.exports = reloadApp;"]}]}