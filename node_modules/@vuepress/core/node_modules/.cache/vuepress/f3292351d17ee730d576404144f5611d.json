{"remainingRequest":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/babel-loader/lib/index.js??ref--3-1!/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/axios/lib/helpers/isURLSameOrigin.js","dependencies":[{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/axios/lib/helpers/isURLSameOrigin.js","mtime":1603041206497},{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/cache-loader/dist/cjs.js","mtime":1603041438982},{"path":"/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/babel-loader/lib/index.js","mtime":1603041438713}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc2VhcmNoIik7Cgp2YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7Cgptb2R1bGUuZXhwb3J0cyA9IHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkgPyAvLyBTdGFuZGFyZCBicm93c2VyIGVudnMgaGF2ZSBmdWxsIHN1cHBvcnQgb2YgdGhlIEFQSXMgbmVlZGVkIHRvIHRlc3QKLy8gd2hldGhlciB0aGUgcmVxdWVzdCBVUkwgaXMgb2YgdGhlIHNhbWUgb3JpZ2luIGFzIGN1cnJlbnQgbG9jYXRpb24uCmZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHsKICB2YXIgbXNpZSA9IC8obXNpZXx0cmlkZW50KS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7CiAgdmFyIHVybFBhcnNpbmdOb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpOwogIHZhciBvcmlnaW5VUkw7CiAgLyoqCiAgKiBQYXJzZSBhIFVSTCB0byBkaXNjb3ZlciBpdCdzIGNvbXBvbmVudHMKICAqCiAgKiBAcGFyYW0ge1N0cmluZ30gdXJsIFRoZSBVUkwgdG8gYmUgcGFyc2VkCiAgKiBAcmV0dXJucyB7T2JqZWN0fQogICovCgogIGZ1bmN0aW9uIHJlc29sdmVVUkwodXJsKSB7CiAgICB2YXIgaHJlZiA9IHVybDsKCiAgICBpZiAobXNpZSkgewogICAgICAvLyBJRSBuZWVkcyBhdHRyaWJ1dGUgc2V0IHR3aWNlIHRvIG5vcm1hbGl6ZSBwcm9wZXJ0aWVzCiAgICAgIHVybFBhcnNpbmdOb2RlLnNldEF0dHJpYnV0ZSgnaHJlZicsIGhyZWYpOwogICAgICBocmVmID0gdXJsUGFyc2luZ05vZGUuaHJlZjsKICAgIH0KCiAgICB1cmxQYXJzaW5nTm9kZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBocmVmKTsgLy8gdXJsUGFyc2luZ05vZGUgcHJvdmlkZXMgdGhlIFVybFV0aWxzIGludGVyZmFjZSAtIGh0dHA6Ly91cmwuc3BlYy53aGF0d2cub3JnLyN1cmx1dGlscwoKICAgIHJldHVybiB7CiAgICAgIGhyZWY6IHVybFBhcnNpbmdOb2RlLmhyZWYsCiAgICAgIHByb3RvY29sOiB1cmxQYXJzaW5nTm9kZS5wcm90b2NvbCA/IHVybFBhcnNpbmdOb2RlLnByb3RvY29sLnJlcGxhY2UoLzokLywgJycpIDogJycsCiAgICAgIGhvc3Q6IHVybFBhcnNpbmdOb2RlLmhvc3QsCiAgICAgIHNlYXJjaDogdXJsUGFyc2luZ05vZGUuc2VhcmNoID8gdXJsUGFyc2luZ05vZGUuc2VhcmNoLnJlcGxhY2UoL15cPy8sICcnKSA6ICcnLAogICAgICBoYXNoOiB1cmxQYXJzaW5nTm9kZS5oYXNoID8gdXJsUGFyc2luZ05vZGUuaGFzaC5yZXBsYWNlKC9eIy8sICcnKSA6ICcnLAogICAgICBob3N0bmFtZTogdXJsUGFyc2luZ05vZGUuaG9zdG5hbWUsCiAgICAgIHBvcnQ6IHVybFBhcnNpbmdOb2RlLnBvcnQsCiAgICAgIHBhdGhuYW1lOiB1cmxQYXJzaW5nTm9kZS5wYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJyA/IHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lIDogJy8nICsgdXJsUGFyc2luZ05vZGUucGF0aG5hbWUKICAgIH07CiAgfQoKICBvcmlnaW5VUkwgPSByZXNvbHZlVVJMKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTsKICAvKioKICAqIERldGVybWluZSBpZiBhIFVSTCBzaGFyZXMgdGhlIHNhbWUgb3JpZ2luIGFzIHRoZSBjdXJyZW50IGxvY2F0aW9uCiAgKgogICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3RVUkwgVGhlIFVSTCB0byB0ZXN0CiAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiwgb3RoZXJ3aXNlIGZhbHNlCiAgKi8KCiAgcmV0dXJuIGZ1bmN0aW9uIGlzVVJMU2FtZU9yaWdpbihyZXF1ZXN0VVJMKSB7CiAgICB2YXIgcGFyc2VkID0gdXRpbHMuaXNTdHJpbmcocmVxdWVzdFVSTCkgPyByZXNvbHZlVVJMKHJlcXVlc3RVUkwpIDogcmVxdWVzdFVSTDsKICAgIHJldHVybiBwYXJzZWQucHJvdG9jb2wgPT09IG9yaWdpblVSTC5wcm90b2NvbCAmJiBwYXJzZWQuaG9zdCA9PT0gb3JpZ2luVVJMLmhvc3Q7CiAgfTsKfSgpIDogLy8gTm9uIHN0YW5kYXJkIGJyb3dzZXIgZW52cyAod2ViIHdvcmtlcnMsIHJlYWN0LW5hdGl2ZSkgbGFjayBuZWVkZWQgc3VwcG9ydC4KZnVuY3Rpb24gbm9uU3RhbmRhcmRCcm93c2VyRW52KCkgewogIHJldHVybiBmdW5jdGlvbiBpc1VSTFNhbWVPcmlnaW4oKSB7CiAgICByZXR1cm4gdHJ1ZTsKICB9Owp9KCk7"},{"version":3,"sources":["/opt/myblog/vuepress-theme-reco-master/zdblog/node_modules/axios/lib/helpers/isURLSameOrigin.js"],"names":["utils","require","module","exports","isStandardBrowserEnv","standardBrowserEnv","msie","test","navigator","userAgent","urlParsingNode","document","createElement","originURL","resolveURL","url","href","setAttribute","protocol","replace","host","search","hash","hostname","port","pathname","charAt","window","location","isURLSameOrigin","requestURL","parsed","isString","nonStandardBrowserEnv"],"mappings":"AAAA;;;;;;;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AAEAC,MAAM,CAACC,OAAP,GACEH,KAAK,CAACI,oBAAN,KAEA;AACA;AACC,SAASC,kBAAT,GAA8B;AAC7B,MAAIC,IAAI,GAAG,kBAAkBC,IAAlB,CAAuBC,SAAS,CAACC,SAAjC,CAAX;AACA,MAAIC,cAAc,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAArB;AACA,MAAIC,SAAJ;AAEA;AACJ;AACA;AACA;AACA;AACA;;AACI,WAASC,UAAT,CAAoBC,GAApB,EAAyB;AACvB,QAAIC,IAAI,GAAGD,GAAX;;AAEA,QAAIT,IAAJ,EAAU;AACR;AACAI,MAAAA,cAAc,CAACO,YAAf,CAA4B,MAA5B,EAAoCD,IAApC;AACAA,MAAAA,IAAI,GAAGN,cAAc,CAACM,IAAtB;AACD;;AAEDN,IAAAA,cAAc,CAACO,YAAf,CAA4B,MAA5B,EAAoCD,IAApC,EATuB,CAWvB;;AACA,WAAO;AACLA,MAAAA,IAAI,EAAEN,cAAc,CAACM,IADhB;AAELE,MAAAA,QAAQ,EAAER,cAAc,CAACQ,QAAf,GAA0BR,cAAc,CAACQ,QAAf,CAAwBC,OAAxB,CAAgC,IAAhC,EAAsC,EAAtC,CAA1B,GAAsE,EAF3E;AAGLC,MAAAA,IAAI,EAAEV,cAAc,CAACU,IAHhB;AAILC,MAAAA,MAAM,EAAEX,cAAc,CAACW,MAAf,GAAwBX,cAAc,CAACW,MAAf,CAAsBF,OAAtB,CAA8B,KAA9B,EAAqC,EAArC,CAAxB,GAAmE,EAJtE;AAKLG,MAAAA,IAAI,EAAEZ,cAAc,CAACY,IAAf,GAAsBZ,cAAc,CAACY,IAAf,CAAoBH,OAApB,CAA4B,IAA5B,EAAkC,EAAlC,CAAtB,GAA8D,EAL/D;AAMLI,MAAAA,QAAQ,EAAEb,cAAc,CAACa,QANpB;AAOLC,MAAAA,IAAI,EAAEd,cAAc,CAACc,IAPhB;AAQLC,MAAAA,QAAQ,EAAGf,cAAc,CAACe,QAAf,CAAwBC,MAAxB,CAA+B,CAA/B,MAAsC,GAAvC,GACAhB,cAAc,CAACe,QADf,GAEA,MAAMf,cAAc,CAACe;AAV1B,KAAP;AAYD;;AAEDZ,EAAAA,SAAS,GAAGC,UAAU,CAACa,MAAM,CAACC,QAAP,CAAgBZ,IAAjB,CAAtB;AAEA;AACJ;AACA;AACA;AACA;AACA;;AACI,SAAO,SAASa,eAAT,CAAyBC,UAAzB,EAAqC;AAC1C,QAAIC,MAAM,GAAI/B,KAAK,CAACgC,QAAN,CAAeF,UAAf,CAAD,GAA+BhB,UAAU,CAACgB,UAAD,CAAzC,GAAwDA,UAArE;AACA,WAAQC,MAAM,CAACb,QAAP,KAAoBL,SAAS,CAACK,QAA9B,IACFa,MAAM,CAACX,IAAP,KAAgBP,SAAS,CAACO,IADhC;AAED,GAJD;AAKD,CAlDD,EAJA,GAwDA;AACC,SAASa,qBAAT,GAAiC;AAChC,SAAO,SAASJ,eAAT,GAA2B;AAChC,WAAO,IAAP;AACD,GAFD;AAGD,CAJD,EA1DF","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n"]}]}